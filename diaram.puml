@startuml
' Main class
class work3.Main {
  + {static} void main(String[])
}

' ===== TEXT package (Decorator + Adapter) =====
class work3.text.TextElement {
  - String text
  + String getText()
  + void display()
}

interface work3.text.TextComponent {
  ~ String getText()
  ~ void display()
  ~ String getDescription()
}

class work3.text.TextElementAdapter {
  - TextElement adaptee
  + String getText()
  + void display()
  + String getDescription()
}

abstract class work3.text.BaseDecorator {
  # TextComponent component
  + String getText()
  + void display()
  + String getDescription()
}

class work3.text.UppercaseDecorator {
  + String getText()
  + void display()
  + String getDescription()
}

class work3.text.LowercaseDecorator {
  + String getText()
  + void display()
  + String getDescription()
}

class work3.text.NewlineDecorator {
  - String newline
  + String getText()
  + void display()
  + String getDescription()
}

class work3.text.TextDemo {
  + {static} void main(String[])
}

' ===== GUI package (Bridge) =====
interface work3.gui.GUIRenderer {
  ~ void render(String,String,int,int,int,int)
}

class work3.gui.QtRenderer {
  + void render(String,String,int,int,int,int)
}

class work3.gui.GtkRenderer {
  + void render(String,String,int,int,int,int)
}

abstract class work3.gui.GUIElement {
  # GUIRenderer renderer
  # int x
  # String text
  + {abstract} void draw()
  + {abstract} String getDescription()
  + void setPosition(int,int)
  + void setSize(int,int)
  + void setText(String)
}

class work3.gui.Button {
  + void draw()
  + String getDescription()
  + void click()
}

class work3.gui.Window {
  + void draw()
  + String getDescription()
  + void save()
}

class work3.gui.Checkbox {
  - boolean checked
  + void draw()
  + String getDescription()
  + void toggle()
}

class work3.gui.GuiDemo {
  + {static} void main(String[])
}

' ===== Relations: inheritance / implementation =====
work3.text.TextComponent <|.. work3.text.TextElementAdapter
work3.text.TextComponent <|.. work3.text.BaseDecorator
work3.text.BaseDecorator <|-- work3.text.UppercaseDecorator
work3.text.BaseDecorator <|-- work3.text.LowercaseDecorator
work3.text.BaseDecorator <|-- work3.text.NewlineDecorator

work3.gui.GUIRenderer <|.. work3.gui.QtRenderer
work3.gui.GUIRenderer <|.. work3.gui.GtkRenderer
work3.gui.GUIElement <|-- work3.gui.Button
work3.gui.GUIElement <|-- work3.gui.Window
work3.gui.GUIElement <|-- work3.gui.Checkbox

' ===== Associations / aggregations =====
work3.text.TextElementAdapter --> work3.text.TextElement : adaptee
work3.text.BaseDecorator o-- work3.text.TextComponent : component
work3.gui.GUIElement o-- work3.gui.GUIRenderer : renderer

' ===== Notes (roles in patterns) =====
note right of work3.text.TextElement
  Adaptee
end note

note right of work3.text.TextComponent
  Component
end note

note right of work3.text.TextElementAdapter
  Adapter
end note

note left of work3.text.BaseDecorator
  Abstract Decorator
end note

note right of work3.text.UppercaseDecorator
  Concrete Decorator
end note

note right of work3.text.LowercaseDecorator
  Concrete Decorator
end note

note right of work3.text.NewlineDecorator
  Concrete Decorator
end note

note right of work3.gui.GUIRenderer
  Implementor
end note

note right of work3.gui.QtRenderer
  Concrete Implementor
end note

note right of work3.gui.GtkRenderer
  Concrete Implementor
end note

note right of work3.gui.GUIElement
  Abstraction
end note

note right of work3.gui.Button
  Refined Abstraction
end note

note right of work3.gui.Window
  Refined Abstraction
end note

note right of work3.gui.Checkbox
  Refined Abstraction
end note
@enduml
